CREATE TABLE EMPLOYEE 
( Fname           VARCHAR(10) , 
  Minit           CHAR, 
  Lname           VARCHAR(20), 
  Ssn             CHAR(9), 
  Bdate           DATE, 
  Address         VARCHAR(30), 
  Sex             CHAR(1), 
  Salary          DECIMAL(5), 
  Super_ssn       CHAR(9), 
  Dno             INT, 
  PRIMARY KEY(Ssn)); 
 
 
CREATE TABLE DEPARTMENT 
( Dname           VARCHAR(15), 
  Dnumber         INT, 
  Mgr_ssn         CHAR(9), 
  Mgr_start_date  DATE, 
  PRIMARY KEY (Dnumber), 
  UNIQUE      (Dname), 
  FOREIGN KEY (Mgr_ssn) REFERENCES EMPLOYEE(Ssn) ); 
 
 
CREATE TABLE DEPT_LOCATIONS 
( Dnumber         INTL, 
  Dlocation       VARCHAR(15), 
  PRIMARY KEY (Dnumber, Dlocation), 
  FOREIGN KEY (Dnumber) REFERENCES DEPARTMENT(Dnumber) ); 
 
 
Create table PROJECT 
( pname       varchar(25) not nullunique, 
  pnumber     int not null primary key, 
  plocation   varchar(15), 
  dnum        int not null, 
  foreign key(dnum) references DEPARTMENT(Dnumber)); 
    
  
CREATE TABLE WORKS_ON 
( Essn            CHAR(9), 
  Pno             INT, 
  Hours           DECIMAL(3,1), 
  PRIMARY KEY (Essn, Pno), 
  FOREIGN KEY (Essn) REFERENCES EMPLOYEE(Ssn), 
  FOREIGN KEY (Pno) REFERENCES PROJECT(Pnumber) ); 
 
 
CREATE TABLE DEPENDENT 
( Essn            CHAR(9), 
  Dependent_name  VARCHAR(15), 
  Sex             CHAR, 
  Bdate           DATE, 
  Relationship    VARCHAR(8), 
  PRIMARY KEY (Essn, Dependent_name), 
  FOREIGN KEY (Essn) REFERENCES EMPLOYEE(Ssn) );




//queries
-- 1. Retrieve the name and address of all employees who work for the ‘Research’ department
SELECT Fname, Minit, Lname, Address  
FROM EMPLOYEE e, DEPARTMENT d 
WHERE e.Dno = d.Dnumber 
AND d.Dname = 'Research';

-- 2. List project number, controlling department number, and department manager’s details for projects located in ‘Stafford’
SELECT e.Lname, e.Bdate, e.Address, p.pnumber, p.dnum 
FROM EMPLOYEE e, PROJECT p, DEPARTMENT d  
WHERE p.plocation = 'Stafford' 
AND p.dnum = d.Dnumber 
AND d.Mgr_ssn = e.Ssn;

-- 3. Retrieve employee’s first and last name and their immediate supervisor’s first and last name
SELECT e1.Fname, e1.Lname, e2.Fname AS Manager_Fname, e2.Lname AS Manager_Lname 
FROM EMPLOYEE e1, EMPLOYEE e2  
WHERE e2.Ssn = e1.Super_ssn;

-- 4. List all project numbers for projects involving an employee named ‘Smith’
(SELECT DISTINCT pnumber FROM PROJECT, DEPARTMENT, EMPLOYEE 
WHERE Dnum = Dnumber AND Mgr_ssn = Ssn AND Lname = 'Smith') 
UNION 
(SELECT DISTINCT pnumber FROM PROJECT, WORKS_ON, EMPLOYEE 
WHERE pnumber = Pno AND Essn = Ssn AND Lname = 'Smith');

-- 5. Retrieve all employees whose address is in Houston, Texas
SELECT Fname, Minit, Lname  
FROM EMPLOYEE  
WHERE Address LIKE '%Houston%TX%';

-- 6. Retrieve employees in department 5 with salaries between $30,000 and $40,000
SELECT * 
FROM EMPLOYEE e, DEPARTMENT d  
WHERE e.Dno = d.Dnumber 
AND d.Dnumber = 5 
AND e.Salary BETWEEN 30000 AND 40000;

-- 7. Find employees who do not have supervisors
SELECT Fname, Minit, Lname  
FROM EMPLOYEE e  
WHERE NOT EXISTS (SELECT * FROM EMPLOYEE s WHERE e.Super_ssn = s.Ssn);

-- 8. Find employees with dependents who share the same first name and gender
SELECT Fname, Minit, Lname  
FROM EMPLOYEE e, DEPENDENT d  
WHERE e.Fname = d.Dependent_name 
AND e.Sex = d.Sex;

-- 9. Find employees who have no dependents
SELECT Fname, Minit, Lname  
FROM EMPLOYEE  
WHERE NOT EXISTS (SELECT * FROM DEPENDENT WHERE Ssn = Essn);

-- 10. List managers who have at least one dependent
SELECT Fname, Minit, Lname  
FROM EMPLOYEE  
WHERE EXISTS (SELECT * FROM DEPARTMENT WHERE Ssn = Mgr_ssn AND Dno = Dnumber) 
AND EXISTS (SELECT * FROM DEPENDENT WHERE Ssn = Essn);

-- 11. Retrieve the Social Security numbers of employees who work on project numbers 1, 2, or 3
SELECT DISTINCT Essn  
FROM WORKS_ON  
WHERE Pno IN (1, 2, 3);

-- 12. Find salary statistics for employees in the ‘Research’ department
SELECT SUM(Salary) AS Total_Salary, MAX(Salary) AS Max_Salary, MIN(Salary) AS Min_Salary, AVG(Salary) AS Avg_Salary  
FROM EMPLOYEE, DEPARTMENT  
WHERE Dno = Dnumber AND Dname = 'Research';

-- 13. Retrieve department number, employee count, and average salary for each department
SELECT Dno, COUNT(*) AS Employee_Count, AVG(Salary) AS Avg_Salary  
FROM EMPLOYEE  
GROUP BY Dno;
